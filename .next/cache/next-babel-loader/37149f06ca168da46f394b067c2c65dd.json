{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/shankarganesh.j/react/nextjs-material-ui/components/Notification.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { NotificationsNone as NotificationsIcon, ThumbUp as ThumbUpIcon, ShoppingCart as ShoppingCartIcon, LocalOffer as TicketIcon, BusinessCenter as DeliveredIcon, SmsFailed as FeedbackIcon, DiscFull as DiscIcon, Email as MessageIcon, Report as ReportIcon, Error as DefenceIcon, AccountBox as CustomerIcon, Done as ShippedIcon, Publish as UploadIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\"; // styles\n\nimport useStyles from \"./styles/notification\"; // components\n\nimport { Typography } from \"./Wrappers\";\nvar typesIcons = {\n  \"e-commerce\": __jsx(ShoppingCartIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }),\n  notification: __jsx(NotificationsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }),\n  offer: __jsx(TicketIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }),\n  info: __jsx(ThumbUpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }),\n  message: __jsx(MessageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }),\n  feedback: __jsx(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }),\n  customer: __jsx(CustomerIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }),\n  shipped: __jsx(ShippedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }),\n  delivered: __jsx(DeliveredIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }),\n  defence: __jsx(DefenceIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }),\n  report: __jsx(ReportIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }),\n  upload: __jsx(UploadIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }),\n  disc: __jsx(DiscIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })\n};\nexport default function Notification(_ref) {\n  var _classnames, _classnames2;\n\n  var variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var icon = getIconByType(props.type);\n  var iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon\n    },\n    style: {\n      color: variant !== \"contained\" && theme.palette[props.color] && theme.palette[props.color].main\n    }\n  });\n  return __jsx(\"div\", {\n    className: classnames(classes.notificationContainer, props.className, (_classnames = {}, _defineProperty(_classnames, classes.notificationContained, variant === \"contained\"), _defineProperty(_classnames, classes.notificationContainedShadowless, props.shadowless), _classnames)),\n    style: {\n      backgroundColor: variant === \"contained\" && theme.palette[props.color] && theme.palette[props.color].main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classnames(classes.notificationIconContainer, (_classnames2 = {}, _defineProperty(_classnames2, classes.notificationIconContainerContained, variant === \"contained\"), _defineProperty(_classnames2, classes.notificationIconContainerRounded, variant === \"rounded\"), _classnames2)),\n    style: {\n      backgroundColor: variant === \"rounded\" && theme.palette[props.color] && tinycolor(theme.palette[props.color].main).setAlpha(0.15).toRgbString()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, iconWithStyles), __jsx(\"div\", {\n    className: classes.messageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classnames(_defineProperty({}, classes.containedTypography, variant === \"contained\")),\n    variant: props.typographyVariant,\n    size: variant !== \"contained\" && !props.typographyVariant && \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, props.message), props.extraButton && props.extraButtonClick && __jsx(Button, {\n    onClick: props.extraButtonClick,\n    disableRipple: true,\n    className: classes.extraButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.extraButton)));\n} // ####################################################################\n\nfunction getIconByType() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"offer\";\n  return typesIcons[type];\n}","map":{"version":3,"sources":["/home/shankarganesh.j/react/nextjs-material-ui/components/Notification.js"],"names":["React","Button","NotificationsNone","NotificationsIcon","ThumbUp","ThumbUpIcon","ShoppingCart","ShoppingCartIcon","LocalOffer","TicketIcon","BusinessCenter","DeliveredIcon","SmsFailed","FeedbackIcon","DiscFull","DiscIcon","Email","MessageIcon","Report","ReportIcon","Error","DefenceIcon","AccountBox","CustomerIcon","Done","ShippedIcon","Publish","UploadIcon","useTheme","classnames","tinycolor","useStyles","Typography","typesIcons","notification","offer","info","message","feedback","customer","shipped","delivered","defence","report","upload","disc","Notification","variant","props","classes","theme","icon","getIconByType","type","iconWithStyles","cloneElement","root","notificationIcon","style","color","palette","main","notificationContainer","className","notificationContained","notificationContainedShadowless","shadowless","backgroundColor","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","setAlpha","toRgbString","messageContainer","containedTypography","typographyVariant","extraButton","extraButtonClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles/notification\";\n\n// components\nimport { Typography } from \"./Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n"]},"metadata":{},"sourceType":"module"}