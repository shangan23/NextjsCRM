{"ast":null,"code":"var _jsxFileName = \"/home/shankarganesh.j/react/nextjs-material-ui/components/SidebarLink.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from \"react\";\nimport { Collapse, Divider, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\"; //import { Link } from \"react-router-dom\";\n\nimport classnames from \"classnames\";\nimport { Link, useRouter } from 'next/router'; // styles\n\nimport useStyles from \"./styles/sidebarlink\"; // components\n\nimport Dot from \"./Dot\";\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type\n}) {\n  const router = useRouter();\n  var classes = useStyles(); // local\n\n  var {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  var isLinkActive = link && (router.pathname === link || router.pathname.indexOf(link) !== -1);\n  if (type === \"title\") return __jsx(Typography, {\n    className: classnames(classes.linkText, classes.sectionTitle, {\n      [classes.linkTextHidden]: !isSidebarOpened\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, label);\n  if (type === \"divider\") return __jsx(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n  if (!children) return __jsx(ListItem, {\n    button: true,\n    component: link && Link,\n    to: link,\n    className: classes.link,\n    classes: {\n      root: classnames(classes.linkRoot, {\n        [classes.linkActive]: isLinkActive && !nested,\n        [classes.linkNested]: nested\n      })\n    },\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, nested ? __jsx(Dot, {\n    color: isLinkActive && \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : icon), __jsx(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n  return __jsx(React.Fragment, null, __jsx(ListItem, {\n    button: true,\n    component: link && Link,\n    onClick: toggleCollapse,\n    className: classes.link,\n    to: link,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    className: classnames(classes.linkIcon, {\n      [classes.linkIconActive]: isLinkActive\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, icon ? icon : __jsx(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    classes: {\n      primary: classnames(classes.linkText, {\n        [classes.linkTextActive]: isLinkActive,\n        [classes.linkTextHidden]: !isSidebarOpened\n      })\n    },\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), children && __jsx(Collapse, {\n    in: isOpen && isSidebarOpened,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: classes.nestedList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, children.map(childrenLink => __jsx(SidebarLink, _extends({\n    key: childrenLink && childrenLink.link,\n    location: location,\n    isSidebarOpened: isSidebarOpened,\n    classes: classes,\n    nested: true\n  }, childrenLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))))); // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}","map":{"version":3,"sources":["/home/shankarganesh.j/react/nextjs-material-ui/components/SidebarLink.js"],"names":["React","useState","Collapse","Divider","List","ListItem","ListItemIcon","ListItemText","Typography","Inbox","InboxIcon","classnames","Link","useRouter","useStyles","Dot","SidebarLink","link","icon","label","children","location","isSidebarOpened","nested","type","router","classes","isOpen","setIsOpen","isLinkActive","pathname","indexOf","linkText","sectionTitle","linkTextHidden","divider","root","linkRoot","linkActive","linkNested","linkIcon","linkIconActive","primary","linkTextActive","toggleCollapse","nestedList","map","childrenLink","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\n//import { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Link,useRouter } from 'next/router'\n\n// styles\nimport useStyles from \"./styles/sidebarlink\";\n\n// components\nimport Dot from \"./Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  const router = useRouter();\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (router.pathname === link || router.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}